# Schedule for thorn GRHayLHDX

STORAGE: grhd_conservatives, grhd_velocities
STORAGE: u0, grhd_conservatives_rhs
STORAGE: flux_x, flux_y, flux_z, failure_checker

if (CCTK_Equals(EOS_type, "Tabulated")) {
  STORAGE: Ye_star, Ye_star_rhs, Ye_flux_x, Ye_flux_y, Ye_flux_z
}

if (evolve_entropy) {
  STORAGE: ent_star, ent_star_rhs, ent_flux_x, ent_flux_y, ent_flux_z
}

#########################################################
# INITIAL DATA CONVERSION
#########################################################
# Fill GRHayLHDX grid functions using initial data from ADMBaseX and HydroBaseX
schedule group GRHayLHDX_Prim2Con2Prim in HydroBaseX_PostInitial
{
} "Initialize GRHayLHDX variables using HydroBaseX initial data"

schedule GRHayLHDX_compute_ccc_centered_spacetime_quantities in GRHayLHDX_Prim2Con2Prim
{
  LANG: C
  READS:  ADMBaseX::metric, ADMBaseX::lapse, ADMBaseX::shift
  WRITES: ccc_spacetime(everywhere)
} "Interpolate spacetime quantities to cell centers"

schedule convert_HydroBase_to_GRHayLHDX in GRHayLHDX_Prim2Con2Prim after GRHayLHDX_compute_ccc_centered_spacetime_quantities
{
  LANG: C
  READS:  HydroBaseX::vel
  READS:  ccc_spacetime
  WRITES: grhd_velocities(everywhere)
  SYNC: grhd_velocities
} "Convert HydroBaseX initial data to GRHayLHDX variables"

if(perturb_initial_data) {
  schedule group GRHayLHDX_perturb_primitives in GRHayLHDX_Prim2Con2Prim after convert_HydroBase_to_GRHayLHDX before GRHayLHDX_prims_to_conservs
  {
  } "perturb initial primitive data"
}

# Runs everywhere. Shouldn't need to sync
schedule group GRHayLHDX_prims_to_conservs in GRHayLHDX_Prim2Con2Prim after convert_HydroBase_to_GRHayLHDX
{
} "Compute conservative variables from primitives"

schedule group GRHayLHDX_conservs_to_prims in GRHayLHDX_Prim2Con2Prim after GRHayLHDX_prims_to_conservs
{
} "Compute primitive variables from conservatives"

if(Convert_to_HydroBase_every) {
  schedule convert_GRHayLHDX_to_HydroBase in GRHayLHDX_Prim2Con2Prim after GRHayLHDX_conservs_to_prims
  {
    LANG: C
    READS:  ccc_spacetime, grhd_velocities
    WRITES: HydroBaseX::vel(everywhere)
  } "Convert GRHayLHDX variables to HydroBaseX"
}

#########################################################
# Con2Prim
#########################################################

schedule group GRHayLHDX_Con2Prim in ODESolvers_PostStep
{
} "Compute primitive variables from conservatives"

# Does MoL sync evolved variables after each substep? If so, no need for this sync
schedule GRHayLHDX_compute_ccc_centered_spacetime_quantities in GRHayLHDX_Con2Prim
{
  LANG: C
  READS:  ADMBaseX::metric, ADMBaseX::lapse, ADMBaseX::shift
  WRITES: ccc_spacetime(everywhere)
  SYNC: grhd_conservatives
} "Interpolate spacetime quantities to cell centers"

if(perturb_every_con2prim) {
  schedule group GRHayLHDX_perturb_conservatives in GRHayLHDX_Con2Prim after GRHayLHDX_compute_ccc_centered_spacetime_quantities before GRHayLHDX_conservs_to_prims
  {
  } "Perturb conservatives before con2prim"
}

schedule group GRHayLHDX_conservs_to_prims in GRHayLHDX_Con2Prim after GRHayLHDX_compute_ccc_centered_spacetime_quantities
{
} "Compute primitive variables from conservatives"

# For now, let's just rely on CarpetX's BCs
#schedule GRHayLHDX_outer_boundaries_on_P_rho_b_vx_vy_vz in GRHayLHDX_Con2Prim after GRHayLHDX_conservs_to_prims
#{
#  LANG: C
#  READS:  ccc_spacetime
#  WRITES: grhd_velocities(boundary), grhd_conservatives(boundary),
#          failure_checker(boundary)
#          #ccc_Tmunu(boundary), failure_checker(boundary)
#  WRITES: HydroBaseX::eps(boundary)
## We must sync {P,rho_b,vx,vy,vz} here.
#  SYNC: grhd_velocities
#} "Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero."

#########################################################
# Stress-energy Tensor
#########################################################

if(update_Tmunu) {
  schedule GRHayLHDX_compute_Tmunu in TmunuBaseX_AddToTmunu
  {
    LANG: C
    READS:  ccc_spacetime, grhd_velocities, u0
    READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps
    WRITES: ccc_Tmunu(everywhere), TmunuBaseX::eTtt, TmunuBaseX::eTti, TmunuBaseX::eTij
  } "Compute stress-energy tensor to and interpolate to vertices"
}

#########################################################
# RHS EVALUATION
#########################################################

schedule group GRHayLHDX_RHS in ODESolvers_RHS
{
} "Evaluate RHSs GRHD equations"

schedule GRHayLHDX_compute_ccc_centered_extrinsic_curvature in GRHayLHDX_RHS
{
   LANG: C
   READS:  ADMBaseX::curv
   WRITES: ccc_curv(everywhere)
} "Interpolate extrinsic curvature to cell centers"

schedule group GRHayLHDX_evaluate_sources_rhs in GRHayLHDX_RHS after GRHayLHDX_compute_ccc_centered_extrinsic_curvature
{
} "Evaluate source terms in GRHD RHSs"

schedule group GRHayLHDX_evaluate_fluxes in GRHayLHDX_RHS after GRHayLHDX_evaluate_sources_rhs
{
} "Compute GRHD fluxes"

schedule group GRHayLHDX_evaluate_fluxes_rhs in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes
{
} "Evaluate flux RHSs of GRHD equations"

# Needed because I can't turn off evolution of variables
if (!CCTK_Equals(EOS_type, "Tabulated")) {
  schedule GRHayLHDX_validate_yestar in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes_rhs
  {
     LANG: C
     WRITES: Ye_star(everywhere), Ye_star_rhs(everywhere)
  } ""
}

if (!evolve_entropy) {
  schedule GRHayLHDX_validate_entstar in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes_rhs
  {
     LANG: C
     WRITES: ent_star(everywhere), ent_star_rhs(everywhere)
  } ""
}

if(CCTK_IsThornActive("NRPyLeakageET"))
{
  schedule convert_GRHayLHDX_to_HydroBase in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes_rhs
  {
    LANG: C
    READS:  ccc_spacetime, grhd_velocities
    WRITES: HydroBaseX::vel(everywhere)
  } "Convert GRHayLHDX variables to HydroBaseX"
}

#########################################################
# Set HydroBase variables for analysis
#########################################################

if(Convert_to_HydroBase_every) {
  schedule GRHayLHDX_compute_ccc_centered_spacetime_quantities in CCTK_ANALYSIS
  {
     LANG: C
     READS:  ADMBaseX::metric, ADMBaseX::lapse, ADMBaseX::shift
     WRITES: ccc_spacetime(everywhere)
  } "Interpolate spacetime quantities to cell centers"
  
  schedule convert_GRHayLHDX_to_HydroBase at CCTK_ANALYSIS before (particle_tracerET VolumeIntegralGroup convert_to_MHDX_3velocity) after (GRHayLHDX_compute_ccc_centered_spacetime_quantities ML_BSSN_evolCalcGroup)
  {
    LANG: C
    READS:  ccc_spacetime, grhd_velocities
    WRITES: HydroBaseX::vel(everywhere)
  } "Convert GRHayLHDX variables to HydroBaseX"
}

##########################################################
# Specific function variants based on evolution parameters
##########################################################

if (CCTK_Equals(EOS_type, "Hybrid") || CCTK_Equals(EOS_type, "Simple")) {
  if (evolve_entropy) {

    schedule GRHayLHDX_hybrid_entropy_prims_to_conservs in GRHayLHDX_prims_to_conservs
    {
      LANG: C
      READS:  ccc_spacetime
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, grhd_velocities
      WRITES: u0(everywhere), grhd_velocities(everywhere),
              grhd_conservatives(everywhere), ent_star(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere),
              HydroBaseX::eps(everywhere), HydroBaseX::entropy(everywhere)
      SYNC:   grhd_conservatives, ent_star
    } "Entropy+Hybrid version of GRHayLHDX_prims_to_conservs"

    schedule GRHayLHDX_hybrid_entropy_conservs_to_prims in GRHayLHDX_conservs_to_prims
    {
      LANG: C
      READS:  ccc_spacetime, grhd_conservatives, ent_star
      WRITES: grhd_conservatives(everywhere), ent_star(everywhere), failure_checker(everywhere),
              u0(everywhere), grhd_velocities(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere),
              HydroBaseX::eps(everywhere), HydroBaseX::entropy(everywhere)
    } "Entropy+Hybrid version of GRHayLHDX_conservs_to_prims"

    schedule GRHayLHDX_hybrid_entropy_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::entropy,
              ccc_spacetime, ccc_curv, grhd_velocities
      WRITES: grhd_conservatives_rhs, ent_star_rhs
    } "Entropy+Hybrid version of GRHayLHDX_evaluate_sources_rhs"

    schedule GRHayLHDX_hybrid_entropy_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::entropy,
              ccc_spacetime, grhd_velocities
      WRITES: flux_x, flux_y, flux_z,
              ent_flux_x, ent_flux_y, ent_flux_z
    } "Entropy+Hybrid version of GRHayLHDX_evaluate_fluxes"
    
    schedule GRHayLHDX_hybrid_entropy_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
              ent_flux_x(interior), ent_flux_y(interior), ent_flux_z(interior),
              grhd_conservatives_rhs(interior), ent_star_rhs(interior)
      WRITES: grhd_conservatives_rhs, ent_star_rhs
    } "Entropy+Hybrid version of GRHayLHDX_evaluate_fluxes_rhs"
    
    schedule GRHayLHDX_hybrid_entropy_perturb_primitives in GRHayLHDX_perturb_primitives
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, grhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), grhd_velocities(everywhere)
    } "Entropy+Hybrid version of GRHayLHDX_perturb_primitives"

    schedule GRHayLHDX_hybrid_entropy_perturb_conservatives in GRHayLHDX_perturb_conservatives
    {
      LANG: C
      READS:  grhd_conservatives, ent_star
      WRITES: grhd_conservatives(everywhere), ent_star(everywhere)
    } "Entropy+Hybrid version of GRHayLHDX_perturb_conservatives"

  } else {

    schedule GRHayLHDX_hybrid_prims_to_conservs in GRHayLHDX_prims_to_conservs
    {
      LANG: C
      READS:  ccc_spacetime, HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              grhd_velocities
      WRITES: u0(everywhere), grhd_velocities(everywhere), grhd_conservatives(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere)
      SYNC:   grhd_conservatives
    } "Hybrid version of GRHayLHDX_prims_to_conservs"

    schedule GRHayLHDX_hybrid_conservs_to_prims in GRHayLHDX_conservs_to_prims
    {
      LANG: C
      READS:  ccc_spacetime, grhd_conservatives
      WRITES: grhd_conservatives(everywhere), failure_checker(everywhere),
              u0(everywhere), grhd_velocities(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere)
    } "Hybrid version of GRHayLHDX_conservs_to_prims"

    schedule GRHayLHDX_hybrid_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press,
              ccc_spacetime, ccc_curv, grhd_velocities
      WRITES: grhd_conservatives_rhs
    } "Hybrid version of GRHayLHDX_evaluate_sources_rhs"
    
    schedule GRHayLHDX_hybrid_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press,
              ccc_spacetime, grhd_velocities
      WRITES: flux_x, flux_y, flux_z
    } "Hybrid version of GRHayLHDX_evaluate_fluxes"
    
    schedule GRHayLHDX_hybrid_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
              grhd_conservatives_rhs(interior)
      WRITES: grhd_conservatives_rhs
    } "Hybrid version of GRHayLHDX_evaluate_fluxes_rhs"
   
    schedule GRHayLHDX_hybrid_perturb_primitives in GRHayLHDX_perturb_primitives
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              grhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere),
              HydroBaseX::eps(everywhere), grhd_velocities(everywhere)
    } "Hybrid version of GRHayLHDX_perturb_primitives"

    schedule GRHayLHDX_hybrid_perturb_conservatives in GRHayLHDX_perturb_conservatives
    {
      LANG: C
      READS:  grhd_conservatives
      WRITES: grhd_conservatives(everywhere)
    } "Hybrid version of GRHayLHDX_perturb_conservatives"

  }
} else if (CCTK_Equals(EOS_type, "Tabulated")) {
  if (evolve_entropy) {

    schedule GRHayLHDX_tabulated_entropy_prims_to_conservs in GRHayLHDX_prims_to_conservs
    {
      LANG: C
      READS:  ccc_spacetime
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
              grhd_velocities
      WRITES: u0(everywhere), grhd_velocities(everywhere), grhd_conservatives(everywhere),
              ent_star(everywhere), Ye_star(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere)
      SYNC:   grhd_conservatives, ent_star, Ye_star
    } "Entropy+Tabulated version of GRHayLHDX_prims_to_conservs"

    schedule GRHayLHDX_tabulated_entropy_conservs_to_prims in GRHayLHDX_conservs_to_prims
    {
      LANG: C
      READS:  ccc_spacetime, grhd_conservatives, ent_star, Ye_star
      WRITES: grhd_conservatives(everywhere), ent_star(everywhere), Ye_star(everywhere),
              u0(everywhere), grhd_velocities(everywhere), failure_checker(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere)
    } "Entropy+Tabulated version of GRHayLHDX_conservs_to_prims"

    schedule GRHayLHDX_tabulated_entropy_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::entropy,
              HydroBaseX::Ye, HydroBaseX::temperature,
              ccc_spacetime, ccc_curv, grhd_velocities
      WRITES: grhd_conservatives_rhs, ent_star_rhs, Ye_star_rhs
    } "Entropy+Tabulated version of GRHayLHDX_evaluate_sources_rhs"
    
    schedule GRHayLHDX_tabulated_entropy_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::entropy,
              HydroBaseX::Ye, HydroBaseX::temperature,
              ccc_spacetime, grhd_velocities
      WRITES: flux_x, flux_y, flux_z,
              ent_flux_x, ent_flux_y, ent_flux_z,
              Ye_flux_x, Ye_flux_y, Ye_flux_z
    } "Entropy+Tabulated version of GRHayLHDX_evaluate_fluxes"
    
    schedule GRHayLHDX_tabulated_entropy_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
              ent_flux_x(interior), ent_flux_y(interior), ent_flux_z(interior),
              Ye_flux_x(interior), Ye_flux_y(interior), Ye_flux_z(interior),
              grhd_conservatives_rhs(interior), ent_star_rhs(interior),
              Ye_star_rhs(interior)
      WRITES: grhd_conservatives_rhs, ent_star_rhs, Ye_star_rhs
    } "Entropy+Tabulated version of GRHayLHDX_evaluate_fluxes_rhs"
    
    schedule GRHayLHDX_tabulated_entropy_perturb_primitives in GRHayLHDX_perturb_primitives
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
              grhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
              grhd_velocities(everywhere)
    } "Entropy+Tabulated version of GRHayLHDX_perturb_primitives"

    schedule GRHayLHDX_tabulated_entropy_perturb_conservatives in GRHayLHDX_perturb_conservatives
    {
      LANG: C
      READS:  grhd_conservatives, ent_star, Ye_star
      WRITES: grhd_conservatives(everywhere), ent_star(everywhere), Ye_star(everywhere)
    } "Entropy+Tabulated version of GRHayLHDX_perturb_conservatives"

  } else {

    schedule GRHayLHDX_tabulated_prims_to_conservs in GRHayLHDX_prims_to_conservs
    {
      LANG: C
      READS:  ccc_spacetime
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::Ye, HydroBaseX::temperature,
              grhd_velocities
      WRITES: u0(everywhere), grhd_velocities(everywhere),
              grhd_conservatives(everywhere), Ye_star(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere)
      SYNC:   grhd_conservatives, Ye_star
    } "Tabulated version of GRHayLHDX_prims_to_conservs"

    schedule GRHayLHDX_tabulated_conservs_to_prims in GRHayLHDX_conservs_to_prims
    {
      LANG: C
      READS:  ccc_spacetime, grhd_conservatives, Ye_star
      WRITES: grhd_conservatives(everywhere), Ye_star(everywhere),
              u0(everywhere), grhd_velocities(everywhere), failure_checker(everywhere),
              HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere)
    } "Tabulated version of GRHayLHDX_conservs_to_prims"

    schedule GRHayLHDX_tabulated_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press,
              HydroBaseX::Ye, HydroBaseX::temperature,
              ccc_spacetime, ccc_curv, grhd_velocities
      WRITES: grhd_conservatives_rhs, Ye_star_rhs
    } "Tabulated version of GRHayLHDX_evaluate_sources_rhs"
    
    schedule GRHayLHDX_tabulated_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press,
              HydroBaseX::Ye, HydroBaseX::temperature,
              ccc_spacetime, grhd_velocities
      WRITES: flux_x, flux_y, flux_z,
              Ye_flux_x, Ye_flux_y, Ye_flux_z
    } "Tabulated version of GRHayLHDX_evaluate_fluxes"
    
    schedule GRHayLHDX_tabulated_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
              Ye_flux_x(interior), Ye_flux_y(interior), Ye_flux_z(interior),
              grhd_conservatives_rhs(interior), Ye_star_rhs(interior)
      WRITES: grhd_conservatives_rhs, Ye_star_rhs
    } "Tabulated version of GRHayLHDX_evaluate_fluxes_rhs"
    
    schedule GRHayLHDX_tabulated_perturb_primitives in GRHayLHDX_perturb_primitives
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::Ye, HydroBaseX::temperature,
              grhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
              grhd_velocities(everywhere)
    } "Tabulated version of GRHayLHDX_perturb_primitives"

    schedule GRHayLHDX_tabulated_perturb_conservatives in GRHayLHDX_perturb_conservatives
    {
      LANG: C
      READS:  grhd_conservatives, Ye_star
      WRITES: grhd_conservatives(everywhere), Ye_star(everywhere)
    } "Tabulated version of GRHayLHDX_perturb_conservatives"
  }
}
