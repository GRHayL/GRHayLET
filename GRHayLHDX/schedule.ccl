# Schedule for thorn GRHayLHDX

STORAGE: grmhd_conservatives
STORAGE: grmhd_velocities, u0, grmhd_conservatives_rhs
STORAGE: flux_x, flux_y, flux_z, failure_checker

if (CCTK_Equals(EOS_type, "Tabulated")) {
  STORAGE: Ye_star, Ye_star_rhs, Ye_flux_x, Ye_flux_y, Ye_flux_z
}

if (evolve_entropy) {
  STORAGE: ent_star, ent_star_rhs, ent_flux_x, ent_flux_y, ent_flux_z
}

#########################################################
# INITIAL DATA CONVERSION
#########################################################
# Fill GRHayLHDX grid functions using initial data from ADMBaseX and HydroBaseX
schedule group GRHayLHDX_Prim2Con2Prim in HydroBaseX_PostInitial
{
} "Initialize GRHayLHDX variables using HydroBaseX initial data"

schedule GRHayLHDX_compute_ccc_centered_spacetime_quantities in GRHayLHDX_Prim2Con2Prim
{
  LANG: C
  READS:  ADMBaseX::metric, ADMBaseX::lapse, ADMBaseX::shift
  WRITES: ccc_spacetime(everywhere)
} "Interpolate spacetime quantities to cell centers"

schedule convert_HydroBase_to_GRHayLHDX in GRHayLHDX_Prim2Con2Prim after GRHayLHDX_compute_ccc_centered_spacetime_quantities
{
  LANG: C
  READS:  HydroBaseX::vel
  READS:  ccc_spacetime
  WRITES: grmhd_velocities(everywhere)
  SYNC: grmhd_velocities
} "Convert HydroBaseX initial data to GRHayLHDX variables"

# Runs everywhere. Shouldn't need to sync
if(perturb_initial_data) {
  schedule group GRHayLHDX_perturb_primitives in GRHayLHDX_Prim2Con2Prim after convert_HydroBase_to_GRHayLHDX before GRHayLHDX_prims_to_conservs
  {
  } "perturb initial primitive data"
}

# Runs everywhere. Shouldn't need to sync
schedule group GRHayLHDX_prims_to_conservs in GRHayLHDX_Prim2Con2Prim after convert_HydroBase_to_GRHayLHDX
{
} "Enforce simulation limits on primitives and compute conservatives"

schedule group GRHayLHDX_conservs_to_prims in GRHayLHDX_Prim2Con2Prim after GRHayLHDX_prims_to_conservs
{
} "Compute primitive variables from conservatives"

# Convert data back to ensure both codes have the same data
if(Convert_to_HydroBase_every)
{
  SCHEDULE convert_GRHayLHDX_to_HydroBase in GRHayLHDX_Prim2Con2Prim after GRHayLHDX_conservs_to_prims
  {
    LANG: C
    READS:  ccc_spacetime, grmhd_velocities
    WRITES: HydroBaseX::vel(everywhere)
  } "Convert GRHayLHDX variables to HydroBaseX"
}

#########################################################
# Con2Prim
#########################################################
schedule GROUP GRHayLHDX_Con2Prim in ODESolvers_PostStep
{
} "Compute the cell-centered spacetime quantities and solve for primitives"

# Does MoL sync evolved variables after each substep? If so, no need for this sync
schedule GRHayLHDX_compute_ccc_centered_spacetime_quantities in GRHayLHDX_Con2Prim
{
  LANG: C
  READS:  ADMBaseX::metric, ADMBaseX::lapse, ADMBaseX::shift
  WRITES: ccc_spacetime(everywhere)
  SYNC: grmhd_conservatives
} "Interpolate spacetime quantities to cell centers"

if(perturb_every_con2prim) {
  schedule group GRHayLHDX_perturb_conservatives in GRHayLHDX_Con2Prim after GRHayLHDX_compute_ccc_centered_spacetime_quantities before GRHayLHDX_conservs_to_prims
  {
  } "Perturb conservatives before con2prim"
}

schedule group GRHayLHDX_conservs_to_prims in GRHayLHDX_Con2Prim after GRHayLHDX_compute_ccc_centered_spacetime_quantities
{
} "Compute primitive variables from conservatives"

# For now, let's just rely on CarpetX's BCs
#schedule GRHayLHDX_outer_boundaries_on_P_rho_b_vx_vy_vz in GRHayLHDX_Con2Prim after GRHayLHDX_conservs_to_prims
#{
#  LANG: C
#  READS:  ccc_spacetime
#  WRITES: grmhd_velocities(boundary), grmhd_conservatives(boundary),
#          failure_checker(boundary)
#          #ccc_Tmunu(boundary), failure_checker(boundary)
#  WRITES: HydroBaseX::eps(boundary)
## We must sync {P,rho_b,vx,vy,vz} here.
#  SYNC: grmhd_velocities
#} "Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero."

#########################################################
# RHS EVALUATION
#########################################################

schedule group GRHayLHDX_RHS in ODESolvers_RHS
{
} "Evaluate RHSs GRHD equations"

schedule GRHayLHDX_compute_ccc_centered_extrinsic_curvature in GRHayLHDX_RHS #after GRHayLHDX_enforce_detgtij_eq_1
{
   LANG: C
   READS:  ADMBaseX::curv
   WRITES: ccc_curv(everywhere)
} "Interpolate extrinsic curvature to cell centers"

schedule group GRHayLHDX_evaluate_sources_rhs in GRHayLHDX_RHS after GRHayLHDX_compute_ccc_centered_extrinsic_curvature
{
} "Evaluate source terms of GRHD RHSs"

schedule group GRHayLHDX_evaluate_fluxes in GRHayLHDX_RHS after GRHayLHDX_evaluate_sources_rhs
{
} "Compute GRHD fluxes"

schedule group GRHayLHDX_evaluate_fluxes_rhs in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes
{
} "Evaluate flux RHSs of GRHD equations"

# Needed because I can't turn off evolution of variables
if (!CCTK_Equals(EOS_type, "Tabulated")) {
  schedule GRHayLHDX_validate_yestar in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes_rhs
  {
     LANG: C
     WRITES: Ye_star(everywhere), Ye_star_rhs(everywhere)
  } ""
}

if (!evolve_entropy) {
  schedule GRHayLHDX_validate_entstar in GRHayLHDX_RHS after GRHayLHDX_evaluate_fluxes_rhs
  {
     LANG: C
     WRITES: ent_star(everywhere), ent_star_rhs(everywhere)
  } ""
}


#########################################################
# Compute stress-energy tensor T_munu
#########################################################

schedule GRHayLHDX_compute_Tmunu in TmunuBaseX_AddToTmunu
{
  LANG: C
  READS:  ccc_spacetime, grmhd_velocities, u0
  READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps
  WRITES: ccc_Tmunu(everywhere), TmunuBaseX::eTtt, TmunuBaseX::eTti, TmunuBaseX::eTij
} "Interpolate stress-energy tensor to vertices"

#########################################################
# Conversion from GRHayLHDX variables to Hydrobase
#########################################################

if(Convert_to_HydroBase_every)
{
  schedule GRHayLHDX_compute_ccc_centered_spacetime_quantities in CCTK_ANALYSIS
  {
     LANG: C
     READS:  ADMBaseX::metric, ADMBaseX::lapse, ADMBaseX::shift
     WRITES: ccc_spacetime(everywhere)
  } "Interpolate spacetime quantities to cell centers"
  
  SCHEDULE convert_GRHayLHDX_to_HydroBase at CCTK_ANALYSIS before (particle_tracerET VolumeIntegralGroup convert_to_MHDX_3velocity) after (GRHayLHDX_compute_ccc_centered_spacetime_quantities ML_BSSN_evolCalcGroup)
  {
    LANG: C
    READS:  ccc_spacetime, grmhd_velocities
    WRITES: HydroBaseX::vel(everywhere)
  } "Convert GRHayLHDX variables to HydroBaseX"
}

#########################################################
# Swaps out different EOS function variants
#########################################################

if (CCTK_Equals(EOS_type, "Hybrid") || CCTK_Equals(EOS_type, "Simple")) {
  if (evolve_entropy) {

    schedule GRHayLHDX_hybrid_entropy_prims_to_conservs in GRHayLHDX_prims_to_conservs
    {
      LANG: C
      READS:  ccc_spacetime
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, grmhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), grmhd_velocities(everywhere),
              grmhd_conservatives(everywhere), ent_star(everywhere)
      SYNC:   grmhd_conservatives, ent_star
    } "Entropy+Hybrid version of GRHayLHDX_prims_to_conservs"

    schedule GRHayLHDX_hybrid_entropy_conservs_to_prims in GRHayLHDX_conservs_to_prims
    {
      LANG: C
      READS:  ccc_spacetime, grmhd_conservatives, ent_star
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), u0(everywhere), grmhd_velocities(everywhere),
              grmhd_conservatives(everywhere), ent_star(everywhere), failure_checker(everywhere)
    } "Entropy+Hybrid version of GRHayLHDX_conservs_to_prims"

    schedule GRHayLHDX_hybrid_entropy_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, ccc_spacetime, ccc_curv, grmhd_velocities
      WRITES: grmhd_conservatives_rhs, ent_star_rhs
    } "Entropy+Hybrid version of GRHayLHDX_evaluate_sources_rhs"

    schedule GRHayLHDX_hybrid_entropy_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, ccc_spacetime, grmhd_velocities
      WRITES: flux_x, flux_y, flux_z,
              ent_flux_x, ent_flux_y, ent_flux_z
    } "Entropy+Hybrid version of GRHayLHDX_evaluate_fluxes"
    
    schedule GRHayLHDX_hybrid_entropy_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
              ent_flux_x(interior), ent_flux_y(interior), ent_flux_z(interior),
              grmhd_conservatives_rhs(interior), ent_star_rhs(interior)
      WRITES: grmhd_conservatives_rhs, ent_star_rhs
    } "Entropy+Hybrid version of GRHayLHDX_evaluate_fluxes_rhs"
    
    schedule GRHayLHDX_hybrid_entropy_perturb_conservatives in GRHayLHDX_perturb_conservatives
    {
      LANG: C
      READS:  grmhd_conservatives, ent_star
      WRITES: grmhd_conservatives(everywhere), ent_star(everywhere)
    } "Entropy+Hybrid version of GRHayLHDX_perturb_conservatives"

    schedule GRHayLHDX_hybrid_entropy_perturb_primitives in GRHayLHDX_perturb_primitives
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, grmhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              HydroBaseX::entropy(everywhere), grmhd_velocities(everywhere)
      SYNC:   HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              HydroBaseX::entropy, grmhd_velocities
    } "Entropy+Hybrid version of GRHayLHDX_perturb_primitives"

  } else {

    schedule GRHayLHDX_hybrid_prims_to_conservs in GRHayLHDX_prims_to_conservs
    {
      LANG: C
      READS:  ccc_spacetime, HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              grmhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              grmhd_velocities(everywhere), grmhd_conservatives(everywhere)
      SYNC:   grmhd_conservatives
    } "Hybrid version of GRHayLHDX_prims_to_conservs"

    schedule GRHayLHDX_hybrid_conservs_to_prims in GRHayLHDX_conservs_to_prims
    {
      LANG: C
      READS:  ccc_spacetime, grmhd_conservatives
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              u0(everywhere), grmhd_velocities(everywhere),
              grmhd_conservatives(everywhere), failure_checker(everywhere)
    } "Hybrid version of GRHayLHDX_conservs_to_prims"

    schedule GRHayLHDX_hybrid_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              ccc_spacetime, ccc_curv, grmhd_velocities
      WRITES: grmhd_conservatives_rhs
    } "Hybrid version of GRHayLHDX_evaluate_sources_rhs"
    
    schedule GRHayLHDX_hybrid_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              ccc_spacetime, grmhd_velocities
      WRITES: flux_x, flux_y, flux_z
    } "Hybrid version of GRHayLHDX_evaluate_fluxes"
    
    schedule GRHayLHDX_hybrid_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
              grmhd_conservatives_rhs(interior)
      WRITES: grmhd_conservatives_rhs
    } "Hybrid version of GRHayLHDX_evaluate_fluxes_rhs"
   
    schedule GRHayLHDX_hybrid_perturb_conservatives in GRHayLHDX_perturb_conservatives
    {
      LANG: C
      READS:  grmhd_conservatives
      WRITES: grmhd_conservatives(everywhere)
    } "Hybrid version of GRHayLHDX_perturb_conservatives"

    schedule GRHayLHDX_hybrid_perturb_primitives in GRHayLHDX_perturb_primitives
    {
      LANG: C
      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              grmhd_velocities
      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
              grmhd_velocities(everywhere)
      SYNC:   HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
              grmhd_velocities
    } "Hybrid version of GRHayLHDX_perturb_primitives"

  }
} else if (CCTK_Equals(EOS_type, "Tabulated")) {
  schedule GRHayLHDX_no_tabulated AT CCTK_WRAGH before GRHayLib_initialize
  {
    LANG: C
    OPTIONS: GLOBAL
  } "Tabulated not supported yet"
#  if (evolve_entropy) {
#
#    schedule GRHayLHDX_tabulated_entropy_prims_to_conservs in GRHayLHDX_prims_to_conservs
#    {
#      LANG: C
#      READS:  ccc_spacetime
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
#              grmhd_velocities
#      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
#              HydroBaseX::entropy(everywhere), HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
#              grmhd_velocities(everywhere), grmhd_conservatives(everywhere),
#              ent_star(everywhere), Ye_star(everywhere)
#      SYNC:   grmhd_conservatives, ent_star, Ye_star
#    } "Entropy+Tabulated version of GRHayLHDX_prims_to_conservs"
#
#    schedule GRHayLHDX_tabulated_entropy_conservs_to_prims in GRHayLHDX_conservs_to_prims
#    {
#      LANG: C
#      READS:  ccc_spacetime, grmhd_conservatives, ent_star, Ye_star
#      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
#              HydroBaseX::entropy(everywhere), HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
#              u0(everywhere), grmhd_velocities(everywhere),
#              grmhd_conservatives(everywhere), ent_star(everywhere), Ye_star(everywhere),
#              failure_checker(everywhere)
#    } "Entropy+Tabulated version of GRHayLHDX_conservs_to_prims"
#
#    schedule GRHayLHDX_tabulated_entropy_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
#    {
#      LANG: C
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
#              ccc_spacetime, ccc_curv, grmhd_velocities
#      WRITES: grmhd_conservatives_rhs, ent_star_rhs, Ye_star_rhs
#    } "Entropy+Tabulated version of GRHayLHDX_evaluate_sources_rhs"
#    
#    schedule GRHayLHDX_tabulated_entropy_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
#    {
#      LANG: C
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
#              ccc_spacetime, grmhd_velocities
#      WRITES: flux_x, flux_y, flux_z,
#              ent_flux_x, ent_flux_y, ent_flux_z,
#              Ye_flux_x, Ye_flux_y, Ye_flux_z
#    } "Entropy+Tabulated version of GRHayLHDX_evaluate_fluxes"
#    
#    schedule GRHayLHDX_tabulated_entropy_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
#    {
#      LANG: C
#      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
#              ent_flux_x(interior), ent_flux_y(interior), ent_flux_z(interior),
#              Ye_flux_x(interior), Ye_flux_y(interior), Ye_flux_z(interior),
#              grmhd_conservatives_rhs(interior), ent_star_rhs(interior),
#              Ye_star_rhs(interior)
#      WRITES: grmhd_conservatives_rhs, ent_star_rhs, Ye_star_rhs
#    } "Entropy+Tabulated version of GRHayLHDX_evaluate_fluxes_rhs"
#    
#    schedule GRHayLHDX_tabulated_entropy_perturb_conservatives in GRHayLHDX_perturb_conservatives
#    {
#      LANG: C
#      READS:  grmhd_conservatives, ent_star, Ye_star
#      WRITES: grmhd_conservatives(everywhere), ent_star(everywhere), Ye_star(everywhere)
#    } "Entropy+Tabulated version of GRHayLHDX_perturb_conservatives"
#
#    schedule GRHayLHDX_tabulated_entropy_perturb_primitives in GRHayLHDX_perturb_primitives
#    {
#      LANG: C
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
#              grmhd_velocities
#      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
#              HydroBaseX::entropy(everywhere), HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
#              grmhd_velocities(everywhere)
#      SYNC:   HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::entropy, HydroBaseX::Ye, HydroBaseX::temperature,
#              grmhd_velocities
#    } "Entropy+Tabulated version of GRHayLHDX_perturb_primitives"
#
#  } else {
#
#    schedule GRHayLHDX_tabulated_prims_to_conservs in GRHayLHDX_prims_to_conservs
#    {
#      LANG: C
#      READS:  ccc_spacetime
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::Ye, HydroBaseX::temperature,
#              grmhd_velocities
#      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
#              HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
#              grmhd_velocities(everywhere), grmhd_conservatives(everywhere),
#              Ye_star(everywhere)
#      SYNC:   grmhd_conservatives, Ye_star
#    } "Tabulated version of GRHayLHDX_prims_to_conservs"
#
#    schedule GRHayLHDX_tabulated_conservs_to_prims in GRHayLHDX_conservs_to_prims
#    {
#      LANG: C
#      READS:  ccc_spacetime, grmhd_conservatives, Ye_star
#      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
#              HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
#              u0(everywhere), grmhd_velocities(everywhere),
#              grmhd_conservatives(everywhere), Ye_star(everywhere), failure_checker(everywhere)
#    } "Tabulated version of GRHayLHDX_conservs_to_prims"
#
#    schedule GRHayLHDX_tabulated_evaluate_sources_rhs in GRHayLHDX_evaluate_sources_rhs
#    {
#      LANG: C
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::Ye, HydroBaseX::temperature,
#              ccc_spacetime, ccc_curv, grmhd_velocities
#      WRITES: grmhd_conservatives_rhs, Ye_star_rhs
#    } "Tabulated version of GRHayLHDX_evaluate_sources_rhs"
#    
#    schedule GRHayLHDX_tabulated_evaluate_fluxes in GRHayLHDX_evaluate_fluxes
#    {
#      LANG: C
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::Ye, HydroBaseX::temperature,
#              ccc_spacetime, grmhd_velocities
#      WRITES: flux_x, flux_y, flux_z,
#              Ye_flux_x, Ye_flux_y, Ye_flux_z
#    } "Tabulated version of GRHayLHDX_evaluate_fluxes"
#    
#    schedule GRHayLHDX_tabulated_evaluate_fluxes_rhs in GRHayLHDX_evaluate_fluxes_rhs
#    {
#      LANG: C
#      READS:  flux_x(interior), flux_y(interior), flux_z(interior),
#              Ye_flux_x(interior), Ye_flux_y(interior), Ye_flux_z(interior),
#              grmhd_conservatives_rhs(interior), Ye_star_rhs(interior)
#      WRITES: grmhd_conservatives_rhs, Ye_star_rhs
#    } "Tabulated version of GRHayLHDX_evaluate_fluxes_rhs"
#    
#    schedule GRHayLHDX_tabulated_perturb_conservatives in GRHayLHDX_perturb_conservatives
#    {
#      LANG: C
#      READS:  grmhd_conservatives, Ye_star
#      WRITES: grmhd_conservatives(everywhere), Ye_star(everywhere)
#    } "Tabulated version of GRHayLHDX_perturb_conservatives"
#
#    schedule GRHayLHDX_tabulated_perturb_primitives in GRHayLHDX_perturb_primitives
#    {
#      LANG: C
#      READS:  HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::Ye, HydroBaseX::temperature,
#              grmhd_velocities
#      WRITES: HydroBaseX::rho(everywhere), HydroBaseX::press(everywhere), HydroBaseX::eps(everywhere),
#              HydroBaseX::Ye(everywhere), HydroBaseX::temperature(everywhere),
#              grmhd_velocities(everywhere)
#      SYNC:   HydroBaseX::rho, HydroBaseX::press, HydroBaseX::eps,
#              HydroBaseX::Ye, HydroBaseX::temperature,
#              grmhd_velocities
#    } "Tabulated version of GRHayLHDX_perturb_primitives"
#  }
}
