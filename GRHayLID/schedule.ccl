# Schedule definitions for thorn GRHayLID

if (CCTK_Equals(initial_hydro, "HydroTest1D")) {
  schedule GRHayLID_1D_tests_hydro_data in HydroBase_Initial
  {
    LANG: C
    READS:  Grid::coordinates
    WRITES: HydroBase::rho(everywhere), HydroBase::press(everywhere),
            HydroBase::eps(everywhere), HydroBase::vel(everywhere)
  } "Set initial hydrodynamic data for 1D test"

  if (initialize_magnetic_quantities) {
    schedule GRHayLID_1D_tests_magnetic_data in HydroBase_Initial after GRHayLID_1D_tests_hydro_data
    {
      LANG: C
      READS:  Grid::coordinates
      WRITES: HydroBase::Avec(everywhere), HydroBase::Bvec(everywhere)
    } "Set initial magnetic data for 1D test"
  }
} else if (CCTK_Equals(initial_hydro, "IsotropicGas")) {
  schedule GRHayLID_IsotropicGas in HydroBase_Initial
  {
    LANG: C
    READS:  Grid::coordinates
    WRITES: HydroBase::rho(everywhere), HydroBase::press(everywhere),
            HydroBase::eps(everywhere), HydroBase::vel(everywhere),
            HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere),
            HydroBase::entropy(everywhere)
  } "Set initial hydrodynamic data for 1D test"

} else if (CCTK_Equals(initial_hydro, "ConstantDensitySphere")) {
  schedule GRHayLID_ConstantDensitySphere in HydroBase_Initial
  {
    LANG: C
    READS:  Grid::coordinates
    WRITES: HydroBase::rho(everywhere), HydroBase::press(everywhere),
            HydroBase::eps(everywhere), HydroBase::vel(everywhere),
            HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere),
            HydroBase::entropy(everywhere)
  } "Set initial hydrodynamic data for 1D test"
}

if(impose_beta_equilibrium) {
  schedule GRHayLID_BetaEquilibrium at CCTK_INITIAL after HydroBase_Initial before HydroBase_Prim2ConInitial as impose_beta_equilibrium
  {
    LANG: C
    READS:  HydroBase::rho
    WRITES: HydroBase::press(everywhere),
            HydroBase::eps(everywhere),
            HydroBase::Y_e(everywhere),
            HydroBase::temperature(everywhere),
            HydroBase::entropy(everywhere)
  } "Set Y_e, temperature, entropy, press, eps in neutrino free beta-equilibrium"
}
