# Schedule definitions for thorn NRPyLeakageET
STORAGE: NRPyLeakageET_opacities[3], NRPyLeakageET_optical_depths[3], NRPyLeakageET_auxiliary_optical_depths

schedule NRPyLeakageET_Initialize at CCTK_INITIAL after (HydroBase_Initial,Convert_to_HydroBase)
{
  LANG    : C
  OPTIONS : GLOBAL-LATE
  READS   : ADMBase::gxx             (Everywhere)
  READS   : ADMBase::gyy             (Everywhere)
  READS   : ADMBase::gzz             (Everywhere)
  READS   : HydroBase::rho           (Everywhere)
  READS   : HydroBase::Y_e           (Everywhere)
  READS   : HydroBase::temperature   (Everywhere)
  WRITES  : NRPyLeakageET::tau_0_nue (Everywhere), tau_0_nue_p , tau_0_nue_p_p
  WRITES  : NRPyLeakageET::tau_1_nue (Everywhere), tau_1_nue_p , tau_1_nue_p_p
  WRITES  : NRPyLeakageET::tau_0_anue(Everywhere), tau_0_anue_p, tau_0_anue_p_p
  WRITES  : NRPyLeakageET::tau_1_anue(Everywhere), tau_1_anue_p, tau_1_anue_p_p
  WRITES  : NRPyLeakageET::tau_0_nux (Everywhere), tau_0_nux_p , tau_0_nux_p_p
  WRITES  : NRPyLeakageET::tau_1_nux (Everywhere), tau_1_nux_p , tau_1_nux_p_p
} "Initialize optical depths and opacities"

schedule NRPyLeakageET_InitSym at BASEGRID after Lapse_InitSymBound
{
  LANG : C
} "Schedule symmetries"

schedule group NRPyLeakageET_MoL in MoL_PostRHS
{
} "Compute neutrino opacities, optical depths, and add source terms to the MHD RHSs"

schedule NRPyLeakageET_compute_neutrino_opacities_and_add_source_terms_to_MHD_rhss as NRPyLeakageET_RHS in NRPyLeakageET_MoL
{
  LANG   : C
  READS  : ADMBase::lapse, ADMBase::shift, ADMBase::metric,
           HydroBase::rho, HydroBase::Y_e, HydroBase::temperature, HydroBase::vel,
           tau_0_nue_p, tau_1_nue_p, tau_0_anue_p, tau_1_anue_p, tau_0_nux_p, tau_1_nux_p
  WRITES : kappa_0_nue, kappa_1_nue, kappa_0_anue, kappa_1_anue, kappa_0_nux, kappa_1_nux
  SYNC   : NRPyLeakageET_optical_depths, NRPyLeakageET_opacities
} "Compute opacities and add source terms to GRMHD right-hand sides; Synchronize optical depths, opacities and ADMBase metric."

if( CCTK_Equals(optical_depth_evolution_type,"static") ) {
  schedule NRPyLeakageET_copy_optical_depths_from_previous_time_level as NRPyLeakageET_optical_depth_step in NRPyLeakageET_MoL after NRPyLeakageET_RHS
  {
    LANG  : C
    READS : tau_0_nue_p, tau_1_nue_p, tau_0_anue_p, tau_1_anue_p, tau_0_nux_p, tau_1_nux_p
    WRITES: tau_0_nue(everywhere) , tau_1_nue(everywhere),
            tau_0_anue(everywhere), tau_1_anue(everywhere),
            tau_0_nux(everywhere) , tau_1_nux(everywhere)
  } "Static evolution: update optical depths by simply copying data from the previous time level."
}
else if( CCTK_Equals(optical_depth_evolution_type,"PathOfLeastResistance") ) {
  schedule NRPyLeakageET_optical_depths_PathOfLeastResistance as NRPyLeakageET_optical_depth_step in NRPyLeakageET_MoL after NRPyLeakageET_RHS
  {
    LANG   : C
    READS  : ADMBase::lapse, ADMBase::shift, ADMBase::metric, HydroBase::rho,
             kappa_0_nue, kappa_1_nue, kappa_0_anue, kappa_1_anue, kappa_0_nux, kappa_1_nux,
             tau_0_nue_p, tau_1_nue_p, tau_0_anue_p, tau_1_anue_p, tau_0_nux_p, tau_1_nux_p
    WRITES : tau_0_nue, tau_1_nue, tau_0_anue, tau_1_anue, tau_0_nux, tau_1_nux
    SYNC   : NRPyLeakageET_optical_depths
  } "PathOfLeastResistance evolution: update optical depths following Nielsen et al. (2014) (1403.3680)."
}

schedule NRPyLeakageET_InitSym in HydroBase_Boundaries as NRPyLeakageET_Sync before NRPyLeakageET_BoundaryConditions
{
  LANG : C
  SYNC : NRPyLeakageET_opacities, NRPyLeakageET_optical_depths
} "Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done before outer boundaries are updated."

schedule NRPyLeakageET_BoundaryConditions in HydroBase_Boundaries
{
  LANG  : C
  READS : kappa_0_nue, kappa_1_nue, kappa_0_anue, kappa_1_anue, kappa_0_nux, kappa_1_nux,
          tau_0_nue, tau_1_nue, tau_0_anue, tau_1_anue, tau_0_nux, tau_1_nux
  WRITES: kappa_0_nue(everywhere) , kappa_1_nue(everywhere),
          kappa_0_anue(everywhere), kappa_1_anue(everywhere),
          kappa_0_nux(everywhere) , kappa_1_nux(everywhere),
          tau_0_nue(everywhere)   , tau_1_nue(everywhere),
          tau_0_anue(everywhere)  , tau_1_anue(everywhere),
          tau_0_nux(everywhere)   , tau_1_nux(everywhere)
  SYNC  : NRPyLeakageET_optical_depths, NRPyLeakageET_optical_depths # This might be unecessary
} "Apply boundary conditions to optical depth"

if( compute_luminosities_every > 0 )
{
  STORAGE: NRPyLeakageET_luminosities
  schedule NRPyLeakageET_compute_neutrino_luminosities_global_sum_and_output_to_file as NRPyLeakageET_compute_and_output_luminosities at CCTK_ANALYSIS before CarpetLib_printtimestats
  {
    LANG    : C
    OPTIONS : GLOBAL
    READS   : ADMBase::lapse, ADMBase::shift, ADMBase::metric,
              HydroBase::rho, HydroBase::Y_e, HydroBase::temperature, HydroBase::w_lorentz,
              tau_0_nue, tau_1_nue, tau_0_anue, tau_1_anue, tau_0_nux, tau_1_nux
    WRITES  : lum_nue(everywhere), lum_anue(everywhere), lum_nux(everywhere)
  } "Compute neutrino luminosities and output to file"
}
