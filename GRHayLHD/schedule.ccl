# Schedule for thorn GRHayLHD

STORAGE: grmhd_conservatives[3], grmhd_velocities
STORAGE: u0, grmhd_conservatives_rhs
STORAGE: grmhd_flux_temps, failure_checker, needs_average

#if (CCTK_Equals(EOS_type, "Tabulated")) {
#  STORAGE: Ye_star[3], Ye_star_rhs, Ye_star_flux
#}
#
#if (evolve_entropy) {
#  STORAGE: ent_star[3], ent_star_rhs, ent_star_flux
#}

#########################################################
# BASIC SETUP
#########################################################
# Registration of MoL RHS, symmetries, and boundary conditions (for PreSync)
schedule GRHayLHD_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: META
} "Register evolved, rhs variables in GRHayLHD for MoL"

# Tells the symmetry thorn how to apply symmetries on each gridfunction
schedule GRHayLHD_InitSymBound at BASEGRID after Lapse_InitSymBound
{
  LANG: C
} "Schedule symmetries"

#########################################################
# INITIAL DATA CONVERSION
#########################################################
# Fill GRHayLHD grid functions using initial data from ADMBase and HydroBase
schedule group GRHayLHD_Prim2Con2Prim in HydroBase_Prim2ConInitial
{
} "Convert HydroBase initial data to GRHayLHD variables"

# Runs everywhere. Shouldn't need to sync
schedule convert_HydroBase_to_GRHayLHD in GRHayLHD_Prim2Con2Prim
{
  LANG: C
  READS:  ADMBase::lapse, ADMBase::shift
  READS:  HydroBase::vel
  WRITES: grmhd_velocities(everywhere)
  SYNC: grmhd_velocities
} "Convert HydroBase initial data (ID) to GRHayLHD variables"

if(perturb_initial_data) {
  schedule group GRHayLHD_perturb_primitives in GRHayLHD_Prim2Con2Prim after convert_HydroBase_to_GRHayLHD before GRHayLHD_prims_to_conservs
  {
  } "perturb initial primitive data"
}

# Runs everywhere. Shouldn't need to sync
schedule group GRHayLHD_prims_to_conservs in GRHayLHD_Prim2Con2Prim after convert_HydroBase_to_GRHayLHD
{
} "Compute conservative variables from primitives"

schedule group GRHayLHD_conservs_to_prims in GRHayLHD_Prim2Con2Prim after GRHayLHD_prims_to_conservs
{
} "Compute primitive variables from conservatives"

if(Convert_to_HydroBase_every) {
  schedule convert_GRHayLHD_to_HydroBase in GRHayLHD_Prim2Con2Prim after GRHayLHD_conservs_to_prims
  {
    LANG: C
    READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
            grmhd_velocities
    WRITES: HydroBase::vel(everywhere), HydroBase::w_lorentz(everywhere)
  } "Convert GRHayLHD-native variables to HydroBase"
}

#########################################################
# Con2Prim
#########################################################

schedule group GRHayLHD_Con2Prim in HydroBase_Con2Prim
{
} "Compute primitive variables from conservatives"

if(perturb_every_con2prim) {
  schedule group GRHayLHD_perturb_conservatives in GRHayLHD_Con2Prim after GRHayLHD_sync_conservatives before GRHayLHD_conservs_to_prims
  {
  } "Perturb conservatives before con2prim"
}

schedule group GRHayLHD_conservs_to_prims in GRHayLHD_Con2Prim
{
} "Compute primitive variables from conservatives"

# Runs everywhere. Shouldn't need to sync
schedule GRHayLHD_outer_boundaries in GRHayLHD_Con2Prim after GRHayLHD_conservs_to_prims
{
  LANG: C
  SYNC: grmhd_velocities, HydroBase::rho, HydroBase::Y_e, HydroBase::temperature, HydroBase::press, HydroBase::eps, HydroBase::entropy
} "Apply selected boundary conditions to the primitive variables"

#########################################################
# Stress-energy Tensor
#########################################################

schedule GRHayLHD_compute_Tmunu in AddToTmunu
{
  LANG: C
  READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
          HydroBase::rho, HydroBase::press, HydroBase::eps,
          grmhd_velocities, u0
  WRITES: TmunuBase::stress_energy_scalar(everywhere),
          TmunuBase::stress_energy_vector(everywhere),
          TmunuBase::stress_energy_tensor(everywhere)
} "Compute stress-energy tensor"

#########################################################
# RHS EVALUATION
#########################################################

schedule group GRHayLHD_RHS in MoL_CalcRHS
{
} "Evaluate RHSs GRHD equations"

schedule group GRHayLHD_evaluate_sources_rhs in GRHayLHD_RHS
{
} "Evaluate source terms in GRHD RHSs"

schedule group GRHayLHD_evaluate_fluxes_rhs in GRHayLHD_RHS after GRHayLHD_evaluate_sources_rhs
{
} "Evaluate flux terms in GRHD RHSs"

if(CCTK_IsThornActive("NRPyLeakageET"))
{
  schedule convert_GRHayLHD_to_HydroBase in MoL_PostRHS before NRPyLeakageET_MoL
  {
    LANG: C
    READS:  ADMBase::lapse, ADMBase::shift,
            grmhd_velocities
    WRITES: HydroBase::vel(everywhere)
  } "Convert needed HydroBase variables for NRPyLeakage"
}

schedule GROUP GRHayLHD_PostPostInitial at CCTK_POSTPOSTINITIAL before MoL_PostStep after HydroBase_Con2Prim
{
} "HydroBase_Con2Prim in CCTK_POSTPOSTINITIAL sets conserv to prim then outer boundaries (OBs, which are technically disabled). The post OB SYNCs actually reprolongate the conservative variables, making cons and prims INCONSISTENT. So here we redo the con2prim, avoiding the SYNC afterward, then copy the result to other timelevels"

schedule GRHayLHD_InitSymBound in GRHayLHD_PostPostInitial as postid before compute_b
{
  SYNC: grmhd_conservatives
  LANG: C
} "Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated."

# Copy data to other timelevels.
schedule GRHayLHD_PostPostInitial_Set_Symmetries__Copy_Timelevels in GRHayLHD_PostPostInitial as mhdpostid after compute_b after p2c
{
  LANG: C
} "Compute post-initialdata quantities"
####################

schedule GRHayLHD_InitSymBound in HydroBase_Boundaries as Boundary_SYNCs
{
  SYNC: grmhd_conservatives
  LANG: C
} "Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated."

#########################################################
# Set HydroBase variables for analysis
#########################################################

if(Convert_to_HydroBase_every) {
  schedule convert_GRHayLHD_to_HydroBase at CCTK_ANALYSIS before (compute_bi_b2_Poyn_fluxET convert_to_MHD_3velocity particle_tracerET VolumeIntegralGroup) after ML_BSSN_evolCalcGroup
  {
    LANG: C
    OPTIONS: GLOBAL-EARLY,LOOP-LOCAL
    READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
            grmhd_velocities
    WRITES: HydroBase::vel(everywhere), HydroBase::w_lorentz(everywhere)
  } "Convert GRHayLHD-native variables to HydroBase"
}

##########################################################
# Specific function variants based on evolution parameters
##########################################################

if (CCTK_Equals(EOS_type, "Hybrid") || CCTK_Equals(EOS_type, "Simple")) {
  if (evolve_entropy) {

    schedule GRHayLHD_hybrid_entropy_prims_to_conservs in GRHayLHD_prims_to_conservs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::eps,
              HydroBase::entropy, grmhd_velocities
      WRITES: u0(everywhere), grmhd_velocities(everywhere),
              grmhd_conservatives(everywhere), #ent_star(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere),
              HydroBase::eps(everywhere), HydroBase::entropy(everywhere)
      SYNC: grmhd_conservatives #, ent_star
    } "Entropy+Hybrid version of GRHayLHD_prims_to_conservs"

    schedule GRHayLHD_hybrid_entropy_conservs_to_prims in GRHayLHD_conservs_to_prims
    {
      LANG: C
      READS:  GRID::coordinates,
              ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              grmhd_conservatives #, ent_star
      WRITES: grmhd_conservatives(everywhere), #ent_star(everywhere), u0(everywhere),
              u0(everywhere), grmhd_velocities(everywhere), failure_checker(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), needs_average(everywhere),
              HydroBase::eps(everywhere), HydroBase::entropy(everywhere)
    } "Entropy+Hybrid version of GRHayLHD_conservs_to_prims"
    
    schedule GRHayLHD_hybrid_entropy_evaluate_sources_rhs in GRHayLHD_evaluate_sources_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift, ADMBase::curv,
              HydroBase::rho, HydroBase::press, HydroBase::entropy, grmhd_velocities
      WRITES: grmhd_conservatives_rhs #, ent_star_rhs
    } "Entropy+Hybrid version of GRHayLHD_evaluate_sources_rhs"

    schedule GRHayLHD_hybrid_entropy_evaluate_fluxes_rhs in GRHayLHD_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::entropy, grmhd_velocities,
              grmhd_conservatives_rhs(interior) #, ent_star_rhs(interior)
      WRITES: grmhd_flux_temps, grmhd_conservatives_rhs #, ent_star_flux, ent_star_rhs
    } "Entropy+Hybrid version of GRHayLHD_evaluate_fluxes_rhs"

    schedule GRHayLHD_hybrid_entropy_perturb_primitives in GRHayLHD_perturb_primitives
    {
      LANG: C
      READS:  HydroBase::rho, HydroBase::press, HydroBase::eps,
              HydroBase::entropy, grmhd_velocities
      WRITES: HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::entropy, grmhd_velocities(everywhere)
    } "Entropy+Hybrid version of GRHayLHD_perturb_primitives"

    schedule GRHayLHD_hybrid_entropy_perturb_conservatives in GRHayLHD_perturb_conservatives
    {
      LANG: C
      READS:  grmhd_conservatives #, ent_star
      WRITES: grmhd_conservatives(everywhere) #, ent_star(everywhere)
    } "Entropy+Hybrid version of GRHayLHD_perturb_conservatives"

  } else {

    schedule GRHayLHD_hybrid_prims_to_conservs in GRHayLHD_prims_to_conservs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::eps,
              grmhd_velocities
      WRITES: u0(everywhere), grmhd_velocities(everywhere), grmhd_conservatives(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere)
      SYNC: grmhd_conservatives
    } "Hybrid version of GRHayLHD_prims_to_conservs"

    schedule GRHayLHD_hybrid_conservs_to_prims in GRHayLHD_conservs_to_prims
    {
      LANG: C
      READS:  GRID::coordinates,
              ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              grmhd_conservatives
      WRITES: grmhd_conservatives(everywhere), failure_checker(everywhere), needs_average(everywhere),
              u0(everywhere), grmhd_velocities(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere)
    } "Hybrid version of GRHayLHD_conservs_to_prims"
    
    schedule GRHayLHD_hybrid_evaluate_sources_rhs in GRHayLHD_evaluate_sources_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift, ADMBase::curv,
              HydroBase::rho, HydroBase::press, grmhd_velocities
      WRITES: grmhd_conservatives_rhs
    } "Hybrid version of GRHayLHD_evaluate_sources_rhs"

    schedule GRHayLHD_hybrid_evaluate_fluxes_rhs in GRHayLHD_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, grmhd_velocities,
              grmhd_conservatives_rhs(interior)
      WRITES: grmhd_flux_temps, grmhd_conservatives_rhs
    } "Hybrid version of GRHayLHD_evaluate_fluxes_rhs"

    schedule GRHayLHD_hybrid_perturb_primitives in GRHayLHD_perturb_primitives
    {
      LANG: C
      READS:  HydroBase::rho, HydroBase::press, HydroBase::eps,
              grmhd_velocities
      WRITES: HydroBase::rho(everywhere), HydroBase::press(everywhere),
              HydroBase::eps(everywhere), grmhd_velocities(everywhere)
    } "Hybrid version of GRHayLHD_perturb_primitives"

    schedule GRHayLHD_hybrid_perturb_conservatives in GRHayLHD_perturb_conservatives
    {
      LANG: C
      READS:  grmhd_conservatives
      WRITES: grmhd_conservatives(everywhere)
    } "Hybrid version of GRHayLHD_perturb_conservatives"

  }
} else if (CCTK_Equals(EOS_type, "Tabulated")) {
  if (evolve_entropy) {

    schedule GRHayLHD_tabulated_entropy_prims_to_conservs in GRHayLHD_prims_to_conservs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::eps,
              HydroBase::entropy, HydroBase::Y_e, HydroBase::temperature,
              grmhd_velocities
      WRITES: u0(everywhere), grmhd_velocities(everywhere), grmhd_conservatives(everywhere),
#              ent_star(everywhere), Ye_star(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::entropy(everywhere), HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere)
      SYNC: grmhd_conservatives #, Ye_star, ent_star
    } "Entropy+Tabulated version of GRHayLHD_prims_to_conservs"

    schedule GRHayLHD_tabulated_entropy_conservs_to_prims in GRHayLHD_conservs_to_prims
    {
      LANG: C
      READS:  GRID::coordinates,
              ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              grmhd_conservatives, grmhd_velocities #, ent_star, Ye_star
      WRITES: grmhd_conservatives(everywhere), #ent_star(everywhere), Ye_star(everywhere),
              u0(everywhere), grmhd_velocities(everywhere), failure_checker(everywhere), needs_average(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::entropy(everywhere), HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere)
    } "Entropy+Tabulated version of GRHayLHD_conservs_to_prims"
    
    schedule GRHayLHD_tabulated_entropy_evaluate_sources_rhs in GRHayLHD_evaluate_sources_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift, ADMBase::curv,
              HydroBase::rho, HydroBase::press, HydroBase::entropy,
              HydroBase::Y_e, HydroBase::temperature,
              grmhd_velocities
      WRITES: grmhd_conservatives_rhs #, ent_star_rhs, Ye_star_rhs
    } "Entropy+Tabulated version of GRHayLHD_evaluate_sources_rhs"

    schedule GRHayLHD_tabulated_entropy_evaluate_fluxes_rhs in GRHayLHD_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::entropy,
              HydroBase::Y_e, HydroBase::temperature, grmhd_velocities,
              grmhd_conservatives_rhs(interior) #,
#              ent_star_rhs(interior), Ye_star_rhs(interior)
      WRITES: grmhd_flux_temps, #ent_star_flux, Ye_star_flux,
              grmhd_conservatives_rhs #, ent_star_rhs, Ye_star_rhs
    } "Entropy+Tabulated version of GRHayLHD_evaluate_fluxes_rhs"

    schedule GRHayLHD_tabulated_entropy_perturb_primitives in GRHayLHD_perturb_primitives
    {
      LANG: C
      READS:  HydroBase::rho, HydroBase::press, HydroBase::eps,
              HydroBase::entropy, HydroBase::Y_e, HydroBase::temperature,
              grmhd_velocities
      WRITES: HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::entropy, HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere),
              grmhd_velocities(everywhere)
    } "Entropy+Tabulated version of GRHayLHD_perturb_primitives"

    schedule GRHayLHD_tabulated_entropy_perturb_conservatives in GRHayLHD_perturb_conservatives
    {
      LANG: C
      READS:  grmhd_conservatives #, ent_star, Ye_star
      WRITES: grmhd_conservatives(everywhere) #, ent_star(everywhere), Ye_star(everywhere)
    } "Entropy+Tabulated version of GRHayLHD_perturb_conservatives"

  } else {

    schedule GRHayLHD_tabulated_prims_to_conservs in GRHayLHD_prims_to_conservs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::eps,
              HydroBase::Y_e, HydroBase::temperature,
              grmhd_velocities
      WRITES: u0(everywhere), grmhd_velocities(everywhere), grmhd_conservatives(everywhere), #Ye_star(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere)
      SYNC: grmhd_conservatives #, Ye_star
    } "Tabulated version of GRHayLHD_prims_to_conservs"

    schedule GRHayLHD_tabulated_conservs_to_prims in GRHayLHD_conservs_to_prims
    {
      LANG: C
      READS:  GRID::coordinates,
              ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              grmhd_conservatives, grmhd_velocities #, Ye_star
      WRITES: grmhd_conservatives(everywhere), #Ye_star(everywhere),
              u0(everywhere), grmhd_velocities(everywhere), failure_checker(everywhere), needs_average(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere)
    } "Tabulated version of GRHayLHD_conservs_to_prims"
    
    schedule GRHayLHD_tabulated_evaluate_sources_rhs in GRHayLHD_evaluate_sources_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift, ADMBase::curv,
              HydroBase::rho, HydroBase::press, HydroBase::Y_e,
              HydroBase::temperature, grmhd_velocities
      WRITES: grmhd_conservatives_rhs #, ent_star_rhs, Ye_star_rhs
    } "Tabulated version of GRHayLHD_evaluate_sources_rhs"

    schedule GRHayLHD_tabulated_evaluate_fluxes_rhs in GRHayLHD_evaluate_fluxes_rhs
    {
      LANG: C
      READS:  ADMBase::metric, ADMBase::lapse, ADMBase::shift,
              HydroBase::rho, HydroBase::press, HydroBase::Y_e,
              HydroBase::temperature, grmhd_velocities,
              grmhd_conservatives_rhs(interior) #, Ye_star_rhs(interior)
      WRITES: grmhd_flux_temps, grmhd_conservatives_rhs #, Ye_star_flux, Ye_star_rhs
    } "Tabulated version of GRHayLHD_evaluate_fluxes_rhs"

    schedule GRHayLHD_tabulated_perturb_primitives in GRHayLHD_perturb_primitives
    {
      LANG: C
      READS:  HydroBase::rho, HydroBase::press, HydroBase::eps,
              HydroBase::Y_e, HydroBase::temperature,
              grmhd_velocities
      WRITES: grmhd_velocities(everywhere),
              HydroBase::rho(everywhere), HydroBase::press(everywhere), HydroBase::eps(everywhere),
              HydroBase::Y_e(everywhere), HydroBase::temperature(everywhere)
    } "Tabulated version of GRHayLHD_perturb_primitives"

    schedule GRHayLHD_tabulated_perturb_conservatives in GRHayLHD_perturb_conservatives
    {
      LANG: C
      READS:  grmhd_conservatives #, Ye_star
      WRITES: grmhd_conservatives(everywhere) #, Ye_star(everywhere)
    } "Tabulated version of GRHayLHD_perturb_conservatives"
  }
}
