# Interface definition for thorn GRHayLMHDX

implements: GRHayLMHDX

inherits: ADMBaseX, TmunubaseX, HydroBaseX, GRHayLib

USES INCLUDE: GRHayLib.h

#########################################################

# Cell-centered metric variables
# The metric quantities in ADMBase are defined at vertices,
# but we need them at cell centers. Since this computation will
# need to be done repeatedly, it is better to store these values.
# We also compute BSSN quantities at cell centers.
CCTK_REAL ccc_spacetime type = GF CENTERING={ccc} TAGS='InterpNumTimelevels=1 prolongation="none"' #should depend on ADMBase::metric, ADMBase::shift, ADMBase::lapse
{
  ccc_lapse,
  ccc_betax, ccc_betay, ccc_betaz
  ccc_gxx, ccc_gxy, ccc_gxz
  ccc_gyy, ccc_gyz, ccc_gzz
  sqrt_detgamma
} "Cell-centered spacetime quantities"

CCTK_REAL ccc_curv type = GF CENTERING={ccc} TAGS='InterpNumTimelevels=1 prolongation="none"' #should depend on ADMBase::curv
{
  ccc_kxx, ccc_kxy, ccc_kxz
  ccc_kyy, ccc_kyz, ccc_kzz
} "Cell-centered extrinsic curvature"

CCTK_REAL ccc_Tmunu type = GF CENTERING={ccc} TAGS='InterpNumTimelevels=1 prolongation="none"' #should depend on TmunuBase vars
{
  ccc_Ttt, ccc_Ttx, ccc_Tty, ccc_Ttz
  ccc_Txx, ccc_Txy, ccc_Txz
  ccc_Tyy, ccc_Tyz, ccc_Tzz
} "Cell-centered stress-energy tensor"

#########################################################

# Primitive variables
# The variables rho_b and pressure are identical to the HydroBase variables. However,
# GRHayL uses the velocity v^i = u^i/u^0, while HydroBase uses the Valencia velocity, so
# these velocities differ from HydroBase.
CCTK_REAL grmhd_primitives_allbutBi type = GF CENTERING={ccc} TAGS='InterpNumTimelevels=1 prolongation="none"' #dependents="grmhd_conservatives" (not sure if this would mess up how c2p is designed)
{
  rho_b, pressure, vx, vy, vz
} "Primitive variables density, pressure, and components of three velocity v^i. Note that v^i is defined in terms of 4-velocity as: v^i = u^i/u^0. Note that this definition differs from the Valencia formalism."

# Separating the computation of Tmunu from the con2prim routine requires providing u0.
# This is most easily done by adding another grid function.
CCTK_REAL u0 type = GF CENTERING={ccc} TAGS='InterpNumTimelevels=1 prolongation="none" checkpoint="no"' "4-velocity component u^0"

#########################################################

# Evolved variables
CCTK_REAL grmhd_conservatives type = GF CENTERING={ccc} Timelevels=1 TAGS='rhs="grmhd_conservatives_rhs" dependents="GRHayLMHDX::grmhd_conservatives_rhs GRHayLMHDX::flux_x GRHayLMHDX::flux_y GRHayLMHDX::flux_z"'
{
  rho_star, tau, Stildex, Stildey, Stildez # Note that Stildei = \tilde{S}_i.
} "Evolved mhd variables"

# Ax is defined on the staggered grid (i,j+1/2,k+1/2)
CCTK_REAL Ax type = GF CENTERING={cvv} Timelevels=1 TAGS='rhs="Ax_rhs" dependents="GRHayLMHDX::Ax_rhs GRHayLMHDX::By_stagger GRHayLMHDX::Bz_stagger"' "x-component of the vector potential, evolved when constrained_transport_scheme==3"

# Ay is defined on the staggered grid (i+1/2,j,k+1/2)
CCTK_REAL Ay type = GF CENTERING={vcv} Timelevels=1 TAGS='rhs="Ay_rhs" dependents="GRHayLMHDX::Ay_rhs GRHayLMHDX::Bx_stagger GRHayLMHDX::Bz_stagger"' "y-component of the vector potential, evolved when constrained_transport_scheme==3"

# Az is defined on the staggered grid (i+1/2,j+1/2,k)
CCTK_REAL Az type = GF CENTERING={vvc} Timelevels=1 TAGS='rhs="Az_rhs" dependents="GRHayLMHDX::Az_rhs GRHayLMHDX::Bx_stagger GRHayLMHDX::By_stagger"' "z-component of the vector potential, evolved when constrained_transport_scheme==3"

# phitilde (=Phi*psi^6) is defined on the staggered grid (i+1/2,j+1/2,k+1/2)
CCTK_REAL phitilde type = GF CENTERING={vvv} Timelevels=1 TAGS='rhs="phitilde_rhs" dependents="GRHayLMHDX::phitilde_rhs"' "sqrt{gamma} Phi, where Phi is the scalar potential"

#########################################################

# Grid functions for staggered B-fields
# Bx_stagger is defined on the staggered grid (i+1/2,j,k)
CCTK_REAL Bx_stagger type = GF CENTERING={vcc} Timelevels=1 tags='InterpNumTimelevels=1 prolongation="none"' "x-component of densitized magnetic field"

# By_stagger is defined on the staggered grid (i,j+1/2,k)
CCTK_REAL By_stagger type = GF CENTERING={cvc} Timelevels=1 tags='InterpNumTimelevels=1 prolongation="none"' "y-component of densitized magnetic field"

# Bz_stagger is defined on the staggered grid (i,j,k+1/2)
CCTK_REAL Bz_stagger type = GF CENTERING={ccv} Timelevels=1 tags='InterpNumTimelevels=1 prolongation="none"' "z-component of densitized magnetic field"

CCTK_REAL grmhd_B_center type = GF CENTERING={ccc} Timelevels=1 TAGS='InterpNumTimelevels=1 prolongation="none"'
{
  Bx_center, By_center, Bz_center
} "B-field components defined at cell centers."

#########################################################

# RHS variables for MoL timestepping
CCTK_REAL grmhd_conservatives_rhs type = GF CENTERING={ccc} TAGS='prolongation="none" Checkpoint="no"'
{
  rho_star_rhs, tau_rhs, Stildex_rhs, Stildey_rhs, Stildez_rhs
} "Storage for the right-hand side of the partial_t rho_star, partial_t tau, and partial_t tilde{S}_i equations. Needed for MoL timestepping."

CCTK_REAL Ax_rhs type = GF CENTERING={cvv} Timelevels=1 tags='Prolongation="none" Checkpoint="no"' "x-component of the vector potential, evolved when constrained_transport_scheme==3"

CCTK_REAL Ay_rhs type = GF CENTERING={vcv} Timelevels=1 tags='Prolongation="none" Checkpoint="no"' "y-component of the vector potential, evolved when constrained_transport_scheme==3"

CCTK_REAL Az_rhs type = GF CENTERING={vvc} Timelevels=1 tags='Prolongation="none" Checkpoint="no"' "z-component of the vector potential, evolved when constrained_transport_scheme==3"

CCTK_REAL phitilde_rhs type = GF CENTERING={vvv} Timelevels=1 tags='Prolongation="none" Checkpoint="no"' "sqrt{gamma} Phi, where Phi is the em scalar potential"

#########################################################

# Temporary variables for A-field evolution
CCTK_REAL cspeed_x type = GF CENTERING={vcc} TAGS='prolongation="none" Checkpoint="no"'
{
  cmin_x, cmax_x
} "min and max characteristic speeds in x direction"

CCTK_REAL cspeed_y type = GF CENTERING={cvc} TAGS='prolongation="none" Checkpoint="no"'
{
  cmin_y, cmax_y
} "min and max characteristic speeds in y direction"

CCTK_REAL cspeed_z type = GF CENTERING={ccv} TAGS='prolongation="none" Checkpoint="no"'
{
  cmin_z, cmax_z
} "min and max characteristic speeds in z direction"

#Temporary variables for flux computation
CCTK_REAL flux_x TYPE=gf CENTERING={vcc} TAGS='prolongation="none" checkpoint="no"'
{
  rho_star_flux_x, tau_flux_x, Sx_flux_x, Sy_flux_x, Sz_flux_x
} "Fluxes in x direction"

CCTK_REAL flux_y TYPE=gf CENTERING={cvc} TAGS='prolongation="none" checkpoint="no"'
{
  rho_star_flux_y, tau_flux_y, Sx_flux_y, Sy_flux_y, Sz_flux_y
} "Fluxes in y direction"

CCTK_REAL flux_z TYPE=gf CENTERING={ccv} TAGS='prolongation="none" checkpoint="no"'
{
  rho_star_flux_z, tau_flux_z, Sx_flux_z, Sy_flux_z, Sz_flux_z
} "Fluxes in z direction"

# Temporary variables for double reconstruction of velocities
CCTK_REAL recon_vel_x type = GF CENTERING={vcc} TAGS='prolongation="none" Checkpoint="no"'
{
  vx_xr, vy_xr, vz_xr
  vx_xl, vy_xl, vz_xl
} "velocities reconstructed in the x direction"

CCTK_REAL recon_vel_y type = GF CENTERING={cvc} TAGS='prolongation="none" Checkpoint="no"'
{
  vy_yr, vz_yr
  vy_yl, vz_yl
} "velocities reconstructed in the y direction"

# Temporary variables for sqrtg_A^i (needed for phitilde_RHS)
CCTK_REAL A_rhs_stencil type = GF CENTERING={vvv} TAGS='prolongation="none" Checkpoint="no"' "interpolated quantity alpha Phi - beta^j A_j"
CCTK_REAL sqrtg_Ax type = GF CENTERING={cvv} TAGS='prolongation="none" Checkpoint="no"' "interpolated quantity sqrt(g) A^x"
CCTK_REAL sqrtg_Ay type = GF CENTERING={vcv} TAGS='prolongation="none" Checkpoint="no"' "interpolated quantity sqrt(g) A^y"
CCTK_REAL sqrtg_Az type = GF CENTERING={vvc} TAGS='prolongation="none" Checkpoint="no"' "interpolated quantity sqrt(g) A^z"

#########################################################

# Diagnostic gridfunctions
CCTK_REAL failure_checker type = GF CENTERING={ccc} TAGS='prolongation="none" Checkpoint="no" InterpNumTimelevels=1' "Gridfunction to track conservative-to-primitives solver fixes. Beware that this gridfunction is overwritten at each RK substep."
